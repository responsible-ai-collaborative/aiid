name: Run API tests
on:
  workflow_call:
    inputs:
      environment:
        description: The Github environment to load secrets from
        type: string
        required: true
      sha:
        description: The commit SHA to run the tests against
        type: string
        required: true
      runner-label:
        description: The label of the runner to use
        type: string
      cache-modifier:
        description: A modifier for the cache key used to bypass existing cache
        type: string
        required: false
        default: ""

jobs:
  test:
    name: Run tests
    environment: ${{ inputs.environment }}
    runs-on:
      labels: ${{ inputs.runner-label || 'ubuntu-latest' }}
    defaults:
      run:
        shell: bash
        working-directory: site/gatsby-site
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.sha }}

      - name: Read node modules from cache
        id: cache-nodemodules
        uses: actions/cache/restore@v4
        env:
          cache-name: cache-install-folder
        with:
          path: |
            site/gatsby-site/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}-${{ inputs.cache-modifier }}

      - name: Install NPM dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm ci
        working-directory: site/gatsby-site

      - name: Extract branch name
        shell: bash
        run: echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV
        id: extract_branch

      - name: Jest run
        run: npm run test:api:ci
        env:
          REALM_APP_ID: ""
          REALM_API_APP_ID: ""
          REALM_API_GROUP_ID: ""
          REALM_API_PUBLIC_KEY: ""
          REALM_API_PRIVATE_KEY: ""
          REALM_GRAPHQL_API_KEY: ""
          API_MONGODB_CONNECTION_STRING: "" # dinamically set by globalSetup.ts
          E2E_ADMIN_USERNAME: ""
          E2E_ADMIN_PASSWORD: ""
          ROLLBAR_POST_SERVER_ITEM_ACCESS_TOKEN: ${{ secrets.GATSBY_ROLLBAR_TOKEN }}
          MAILERSEND_API_KEY: something
          NOTIFICATIONS_SENDER_NAME: Test Preview
          NOTIFICATIONS_SENDER: test@test.com
          PROCESS_NOTIFICATIONS_SECRET: sarasa     
          SITE_URL: https://incidentdatabase.test

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
